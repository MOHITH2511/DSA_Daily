/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null || (head.next==null && n==1)) return null;
        ListNode tptr = head;
        int len = 0;
        while(tptr!=null){
            len++;
            tptr = tptr.next;
        }
        if(len==n) {
            head = head.next;
            return head;
            }
        int ind = len - n;
        tptr = head;
        for(int i=0;i<ind;i++){
            if(i==ind-1){
                tptr.next = tptr.next.next;
                break;
            }
            tptr = tptr.next;
        }
        return head;
    }
}
